"use strict";
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/// <reference types="cordova-plus" />
Object.defineProperty(exports, "__esModule", { value: true });
exports.initPlugin = exports.waitEvent = exports.execAsync = exports.ConsentStatus = exports.Events = exports.NativeActions = void 0;
var NativeActions;
(function (NativeActions) {
    NativeActions["getConsentStatus"] = "getConsentStatus";
    NativeActions["getFormStatus"] = "getFormStatus";
    NativeActions["loadForm"] = "loadForm";
    NativeActions["ready"] = "ready";
    NativeActions["requestInfoUpdate"] = "requestInfoUpdate";
    NativeActions["requestTrackingAuthorization"] = "requestTrackingAuthorization";
    NativeActions["reset"] = "reset";
    NativeActions["showForm"] = "showForm";
    NativeActions["trackingAuthorizationStatus"] = "trackingAuthorizationStatus";
})(NativeActions = exports.NativeActions || (exports.NativeActions = {}));
var Events;
(function (Events) {
    Events["ready"] = "consent.ready";
})(Events = exports.Events || (exports.Events = {}));
var ConsentStatus;
(function (ConsentStatus) {
    ConsentStatus[ConsentStatus["Unknown"] = 0] = "Unknown";
    ConsentStatus[ConsentStatus["Required"] = 1] = "Required";
    ConsentStatus[ConsentStatus["NotRequired"] = 2] = "NotRequired";
    ConsentStatus[ConsentStatus["Obtained"] = 3] = "Obtained";
})(ConsentStatus = exports.ConsentStatus || (exports.ConsentStatus = {}));
var execAsync = function (action, args) {
    return new Promise(function (resolve, reject) {
        cordova.exec(resolve, reject, 'Consent', action, args);
    });
};
exports.execAsync = execAsync;
function waitEvent(successEvent, failEvent) {
    if (failEvent === void 0) { failEvent = ''; }
    return new Promise(function (resolve, reject) {
        document.addEventListener(successEvent, function (event) {
            resolve(event);
        }, false);
        if (failEvent) {
            document.addEventListener(failEvent, function (failedEvent) {
                reject(failedEvent);
            }, false);
        }
    });
}
exports.waitEvent = waitEvent;
var initPlugin = function () {
    document.addEventListener('deviceready', function () {
        cordova.exec(function (event) {
            cordova.fireDocumentEvent(event.type, event.data);
        }, console.error, 'Consent', NativeActions.ready);
    }, false);
};
exports.initPlugin = initPlugin;
