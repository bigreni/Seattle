// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/// <reference types="cordova-plus" />

export enum NativeActions {
  getConsentStatus = 'getConsentStatus',
  getFormStatus = 'getFormStatus',
  loadForm = 'loadForm',
  ready = 'ready',
  requestInfoUpdate = 'requestInfoUpdate',
  requestTrackingAuthorization = 'requestTrackingAuthorization',
  reset = 'reset',
  showForm = 'showForm',
  trackingAuthorizationStatus = 'trackingAuthorizationStatus',
}

export enum Events {
  ready = 'consent.ready',
}

export enum ConsentStatus {
  Unknown = 0,
  Required = 1,
  NotRequired = 2,
  Obtained = 3,
}

export const execAsync = (action: string, args?: any[]) => {
  return new Promise((resolve, reject) => {
    cordova.exec(resolve, reject, 'Consent', action, args)
  })
}

export function waitEvent(
  successEvent: string,
  failEvent = '',
): Promise<CustomEvent> {
  return new Promise((resolve, reject) => {
    document.addEventListener(
      successEvent as any,
      (event: CustomEvent) => {
        resolve(event)
      },
      false,
    )

    if (failEvent) {
      document.addEventListener(
        failEvent as any,
        (failedEvent: CustomEvent) => {
          reject(failedEvent)
        },
        false,
      )
    }
  })
}

export const initPlugin = () => {
  document.addEventListener(
    'deviceready',
    () => {
      cordova.exec(
        (event) => {
          cordova.fireDocumentEvent(event.type, event.data)
        },
        console.error,
        'Consent',
        NativeActions.ready,
      )
    },
    false,
  )
}
